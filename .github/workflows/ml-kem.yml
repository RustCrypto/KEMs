name: ml-kem

on:
  pull_request:
    paths:
      - ".github/workflows/ml-kem.yml"
      - "ml-kem/**"
      - "Cargo.*"
  push:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    working-directory: ml-kem

env:
  RUSTFLAGS: "-Dwarnings"
  CARGO_INCREMENTAL: 0

jobs:
  set-msrv:
    uses: RustCrypto/actions/.github/workflows/set-msrv.yml@master
    with:
      msrv: 1.76.0

  no_std:
    needs: set-msrv
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - ${{needs.set-msrv.outputs.msrv}}
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: cargo build --no-default-features --target ${{ matrix.target }}

  minimal-versions:
    # temporarily disabled as requested by Tony (https://github.com/RustCrypto/KEMs/pull/15#pullrequestreview-2006378802)
    if: false
    uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master
    with:
      working-directory: ${{ github.workflow }}

  test:
    needs: set-msrv
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - ${{needs.set-msrv.outputs.msrv}}
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --features=all

  bench:
    needs: set-msrv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - run: cargo install cargo-codspeed
      - run: cargo codspeed build --features=bench
      - name: Run benchmarks
        uses: CodSpeedHQ/action@v2
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: cargo codspeed run

  cross:
    needs: set-msrv
    strategy:
      matrix:
        include:
          - target: powerpc-unknown-linux-gnu
            rust: ${{needs.set-msrv.outputs.msrv}}
          - target: powerpc-unknown-linux-gnu
            rust: stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cross-install@master
      - run: cross test --release --target ${{ matrix.target }} --features=all
